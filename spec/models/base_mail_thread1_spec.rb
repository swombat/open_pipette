=begin
#Pipedrive API v1

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'
require 'date'

# Unit tests for OpenPipette::BaseMailThread1
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe OpenPipette::BaseMailThread1 do
  let(:instance) { OpenPipette::BaseMailThread1.new }

  describe 'test an instance of BaseMailThread1' do
    it 'should create an instance of BaseMailThread1' do
      # uncomment below to test the instance creation
      #expect(instance).to be_instance_of(OpenPipette::BaseMailThread1)
    end
  end

  describe 'test attribute "id"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "account_id"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "user_id"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "subject"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "snippet"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "read_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.read_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "mail_tracking_status"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "has_attachments_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.has_attachments_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "has_inline_attachments_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.has_inline_attachments_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "has_real_attachments_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.has_real_attachments_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "deleted_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.deleted_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "synced_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.synced_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "smart_bcc_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.smart_bcc_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "mail_link_tracking_enabled_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.mail_link_tracking_enabled_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "parties"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "drafts_parties"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "folders"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "version"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "snippet_draft"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "snippet_sent"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "message_count"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "has_draft_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.has_draft_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "has_sent_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.has_sent_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "archived_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.archived_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "shared_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.shared_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "external_deleted_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.external_deleted_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "first_message_to_me_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.first_message_to_me_flag = value }.not_to raise_error
      # end
    end
  end

  describe 'test attribute "last_message_timestamp"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "first_message_timestamp"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "last_message_sent_timestamp"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "last_message_received_timestamp"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "add_time"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "update_time"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "deal_id"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "deal_status"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "lead_id"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  describe 'test attribute "all_messages_sent_flag"' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
      # validator = Petstore::EnumTest::EnumAttributeValidator.new('Float', [0, 1])
      # validator.allowable_values.each do |value|
      #   expect { instance.all_messages_sent_flag = value }.not_to raise_error
      # end
    end
  end

end
