=begin
#Pipedrive API v1

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenPipette::GoalsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'GoalsApi' do
  before do
    # run before each test
    @api_instance = OpenPipette::GoalsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of GoalsApi' do
    it 'should create an instance of GoalsApi' do
      expect(@api_instance).to be_instance_of(OpenPipette::GoalsApi)
    end
  end

  # unit tests for add_goal
  # Add a new goal
  # Adds a new goal. Along with adding a new goal, a report is created to track the progress of your goal.
  # @param [Hash] opts the optional parameters
  # @option opts [AddGoalRequest] :add_goal_request 
  # @return [AddOrUpdateGoalResponse200]
  describe 'add_goal test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_goal
  # Delete existing goal
  # Marks a goal as deleted.
  # @param id The ID of the goal
  # @param [Hash] opts the optional parameters
  # @return [DeleteGoalResponse200]
  describe 'delete_goal test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_goal_result
  # Get result of a goal
  # Gets the progress of a goal for the specified period.
  # @param id The ID of the goal that the results are looked for
  # @param period_start The start date of the period for which to find the goal&#39;s progress. Format: YYYY-MM-DD. This date must be the same or after the goal duration start date. 
  # @param period_end The end date of the period for which to find the goal&#39;s progress. Format: YYYY-MM-DD. This date must be the same or before the goal duration end date. 
  # @param [Hash] opts the optional parameters
  # @return [GetGoalResultResponse200]
  describe 'get_goal_result test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_goals
  # Find goals
  # Returns data about goals based on criteria. For searching, append &#x60;{searchField}&#x3D;{searchValue}&#x60; to the URL, where &#x60;searchField&#x60; can be any one of the lowest-level fields in dot-notation (e.g. &#x60;type.params.pipeline_id&#x60;; &#x60;title&#x60;). &#x60;searchValue&#x60; should be the value you are looking for on that field. Additionally, &#x60;is_active&#x3D;&lt;true|false&gt;&#x60; can be provided to search for only active/inactive goals. When providing &#x60;period.start&#x60;, &#x60;period.end&#x60; must also be provided and vice versa.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :type_name The type of the goal. If provided, everyone&#39;s goals will be returned.
  # @option opts [String] :title The title of the goal
  # @option opts [Boolean] :is_active Whether the goal is active or not
  # @option opts [Integer] :assignee_id The ID of the user who&#39;s goal to fetch. When omitted, only your goals will be returned.
  # @option opts [String] :assignee_type The type of the goal&#39;s assignee. If provided, everyone&#39;s goals will be returned.
  # @option opts [Float] :expected_outcome_target The numeric value of the outcome. If provided, everyone&#39;s goals will be returned.
  # @option opts [String] :expected_outcome_tracking_metric The tracking metric of the expected outcome of the goal. If provided, everyone&#39;s goals will be returned.
  # @option opts [Integer] :expected_outcome_currency_id The numeric ID of the goal&#39;s currency. Only applicable to goals with &#x60;expected_outcome.tracking_metric&#x60; with value &#x60;sum&#x60;. If provided, everyone&#39;s goals will be returned.
  # @option opts [Array<Integer>] :type_params_pipeline_id An array of pipeline IDs or &#x60;null&#x60; for all pipelines. If provided, everyone&#39;s goals will be returned.
  # @option opts [Integer] :type_params_stage_id The ID of the stage. Applicable to only &#x60;deals_progressed&#x60; type of goals. If provided, everyone&#39;s goals will be returned.
  # @option opts [Array<Integer>] :type_params_activity_type_id An array of IDs or &#x60;null&#x60; for all activity types. Only applicable for &#x60;activities_completed&#x60; and/or &#x60;activities_added&#x60; types of goals. If provided, everyone&#39;s goals will be returned.
  # @option opts [Date] :period_start The start date of the period for which to find goals. Date in format of YYYY-MM-DD. When &#x60;period.start&#x60; is provided, &#x60;period.end&#x60; must be provided too.
  # @option opts [Date] :period_end The end date of the period for which to find goals. Date in format of YYYY-MM-DD.
  # @return [GetGoalsResponse200]
  describe 'get_goals test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_goal
  # Update existing goal
  # Updates an existing goal.
  # @param id The ID of the goal
  # @param [Hash] opts the optional parameters
  # @option opts [BasicGoalRequest] :basic_goal_request 
  # @return [AddOrUpdateGoalResponse200]
  describe 'update_goal test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
