=begin
#Pipedrive API v1

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenPipette::ProjectsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ProjectsApi' do
  before do
    # run before each test
    @api_instance = OpenPipette::ProjectsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ProjectsApi' do
    it 'should create an instance of ProjectsApi' do
      expect(@api_instance).to be_instance_of(OpenPipette::ProjectsApi)
    end
  end

  # unit tests for add_project
  # Add a project
  # Adds a new project. Note that you can supply additional custom fields along with the request that are not described here. These custom fields are different for each Pipedrive account and can be recognized by long hashes as keys.
  # @param [Hash] opts the optional parameters
  # @option opts [AddProjectRequest] :add_project_request 
  # @return [AddProjectResponse201]
  describe 'add_project test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for archive_project
  # Archive a project
  # Archives a project.
  # @param id The ID of the project
  # @param [Hash] opts the optional parameters
  # @return [UpdateProjectResponse200]
  describe 'archive_project test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_project
  # Delete a project
  # Marks a project as deleted.
  # @param id The ID of the project
  # @param [Hash] opts the optional parameters
  # @return [DeleteProjectResponse200]
  describe 'delete_project test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_project
  # Get details of a project
  # Returns the details of a specific project. Also note that custom fields appear as long hashes in the resulting data. These hashes can be mapped against the &#x60;key&#x60; value of project fields.
  # @param id The ID of the project
  # @param [Hash] opts the optional parameters
  # @return [GetProjectResponse200]
  describe 'get_project test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_project_activities
  # Returns project activities
  # Returns activities linked to a specific project.
  # @param id The ID of the project
  # @param [Hash] opts the optional parameters
  # @return [GetActivitiesCollectionResponse200]
  describe 'get_project_activities test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_project_groups
  # Returns project groups
  # Returns all active groups under a specific project.
  # @param id The ID of the project
  # @param [Hash] opts the optional parameters
  # @return [GetProjectGroupsResponse200]
  describe 'get_project_groups test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_project_plan
  # Returns project plan
  # Returns information about items in a project plan. Items consists of tasks and activities and are linked to specific project phase and group.
  # @param id The ID of the project
  # @param [Hash] opts the optional parameters
  # @return [GetProjectPlanResponse200]
  describe 'get_project_plan test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_project_tasks
  # Returns project tasks
  # Returns tasks linked to a specific project.
  # @param id The ID of the project
  # @param [Hash] opts the optional parameters
  # @return [GetTasksResponse200]
  describe 'get_project_tasks test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_projects
  # Get all projects
  # Returns all projects. This is a cursor-paginated endpoint. For more information, please refer to our documentation on &lt;a href&#x3D;\&quot;https://pipedrive.readme.io/docs/core-api-concepts-pagination\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;pagination&lt;/a&gt;.
  # @param [Hash] opts the optional parameters
  # @option opts [String] :cursor For pagination, the marker (an opaque string value) representing the first item on the next page
  # @option opts [Integer] :limit For pagination, the limit of entries to be returned. If not provided, 100 items will be returned.
  # @option opts [Integer] :filter_id The ID of the filter to use
  # @option opts [String] :status If supplied, includes only projects with the specified statuses. Possible values are &#x60;open&#x60;, &#x60;completed&#x60;, &#x60;canceled&#x60; and &#x60;deleted&#x60;. By default &#x60;deleted&#x60; projects are not returned.
  # @option opts [Integer] :phase_id If supplied, only projects in specified phase are returned
  # @option opts [Boolean] :include_archived If supplied with &#x60;true&#x60; then archived projects are also included in the response. By default only not archived projects are returned.
  # @return [GetProjectsResponse200]
  describe 'get_projects test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_projects_boards
  # Get all project boards
  # Returns all projects boards that are not deleted.
  # @param [Hash] opts the optional parameters
  # @return [GetProjectBoardsResponse200]
  describe 'get_projects_boards test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_projects_phases
  # Get project phases
  # Returns all active project phases under a specific board.
  # @param board_id ID of the board for which phases are requested
  # @param [Hash] opts the optional parameters
  # @return [GetProjectPhasesResponse200]
  describe 'get_projects_phases test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for put_project_plan_activity
  # Update activity in project plan
  # Updates an activity phase or group in a project.
  # @param id The ID of the project
  # @param activity_id The ID of the activity
  # @param [Hash] opts the optional parameters
  # @option opts [ProjectPutPlanItemBodyObject] :project_put_plan_item_body_object 
  # @return [UpdatedActivityPlanItem200]
  describe 'put_project_plan_activity test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for put_project_plan_task
  # Update task in project plan
  # Updates a task phase or group in a project.
  # @param id The ID of the project
  # @param task_id The ID of the task
  # @param [Hash] opts the optional parameters
  # @option opts [ProjectPutPlanItemBodyObject] :project_put_plan_item_body_object 
  # @return [UpdatedTaskPlanItem200]
  describe 'put_project_plan_task test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_project
  # Update a project
  # Updates a project.
  # @param id The ID of the project
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateProjectRequest] :update_project_request 
  # @return [UpdateProjectResponse200]
  describe 'update_project test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
