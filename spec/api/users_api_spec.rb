=begin
#Pipedrive API v1

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenPipette::UsersApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'UsersApi' do
  before do
    # run before each test
    @api_instance = OpenPipette::UsersApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of UsersApi' do
    it 'should create an instance of UsersApi' do
      expect(@api_instance).to be_instance_of(OpenPipette::UsersApi)
    end
  end

  # unit tests for add_user
  # Add a new user
  # Adds a new user to the company, returns the ID upon success.
  # @param [Hash] opts the optional parameters
  # @option opts [AddUserRequest] :add_user_request 
  # @return [UserResponse200]
  describe 'add_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_users_by_name
  # Find users by name
  # Finds users by their name.
  # @param term The search term to look for
  # @param [Hash] opts the optional parameters
  # @option opts [Float] :search_by_email When enabled, the term will only be matched against email addresses of users. Default: &#x60;false&#x60;.
  # @return [UsersResponse200]
  describe 'find_users_by_name test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_current_user
  # Get current user data
  # Returns data about an authorized user within the company with bound company data: company ID, company name, and domain. Note that the &#x60;locale&#x60; property means &#39;Date/number format&#39; in the Pipedrive account settings, not the chosen language.
  # @param [Hash] opts the optional parameters
  # @return [GetCurrentUserResponse200]
  describe 'get_current_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user
  # Get one user
  # Returns data about a specific user within the company.
  # @param id The ID of the user
  # @param [Hash] opts the optional parameters
  # @return [UserResponse200]
  describe 'get_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_followers
  # List followers of a user
  # Lists the followers of a specific user.
  # @param id The ID of the user
  # @param [Hash] opts the optional parameters
  # @return [UserIds]
  describe 'get_user_followers test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_permissions
  # List user permissions
  # Lists aggregated permissions over all assigned permission sets for a user.
  # @param id The ID of the user
  # @param [Hash] opts the optional parameters
  # @return [GetUserPermissionsResponse200]
  describe 'get_user_permissions test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_role_assignments
  # List role assignments
  # Lists role assignments for a user.
  # @param id The ID of the user
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start Pagination start
  # @option opts [Integer] :limit Items shown per page
  # @return [GetUserRoleAssignmentsResponse200]
  describe 'get_user_role_assignments test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_user_role_settings
  # List user role settings
  # Lists the settings of user&#39;s assigned role.
  # @param id The ID of the user
  # @param [Hash] opts the optional parameters
  # @return [GetRoleSettingsResponse200]
  describe 'get_user_role_settings test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_users
  # Get all users
  # Returns data about all users within the company.
  # @param [Hash] opts the optional parameters
  # @return [UsersResponse200]
  describe 'get_users test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_user
  # Update user details
  # Updates the properties of a user. Currently, only &#x60;active_flag&#x60; can be updated.
  # @param id The ID of the user
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateUserRequest] :update_user_request 
  # @return [UserResponse200]
  describe 'update_user test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
