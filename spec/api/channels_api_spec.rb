=begin
#Pipedrive API v1

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenPipette::ChannelsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'ChannelsApi' do
  before do
    # run before each test
    @api_instance = OpenPipette::ChannelsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ChannelsApi' do
    it 'should create an instance of ChannelsApi' do
      expect(@api_instance).to be_instance_of(OpenPipette::ChannelsApi)
    end
  end

  # unit tests for add_channel
  # Add a channel
  # Adds a new messaging channel, only admins are able to register new channels. It will use the getConversations endpoint to fetch conversations, participants and messages afterward. To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).
  # @param [Hash] opts the optional parameters
  # @option opts [AddChannelRequest] :add_channel_request 
  # @return [AddChannel200Response]
  describe 'add_channel test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_channel
  # Delete a channel
  # Deletes an existing messengerâ€™s channel and all related entities (conversations and messages). To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).
  # @param id The ID of the channel provided by the integration
  # @param [Hash] opts the optional parameters
  # @return [DeleteChannel200Response]
  describe 'delete_channel test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_conversation
  # Delete a conversation
  # Deletes an existing conversation. To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).
  # @param channel_id The ID of the channel provided by the integration
  # @param conversation_id The ID of the conversation provided by the integration
  # @param [Hash] opts the optional parameters
  # @return [DeleteChannel200Response]
  describe 'delete_conversation test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for receive_message
  # Receives an incoming message
  # Adds a message to a conversation. To use the endpoint, you need to have **Messengers integration** OAuth scope enabled and the Messaging manifest ready for the [Messaging app extension](https://pipedrive.readme.io/docs/messaging-app-extension).
  # @param [Hash] opts the optional parameters
  # @option opts [ReceiveMessageRequest] :receive_message_request 
  # @return [ReceiveMessage200Response]
  describe 'receive_message test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
