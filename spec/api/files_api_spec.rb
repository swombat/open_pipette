=begin
#Pipedrive API v1

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenPipette::FilesApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'FilesApi' do
  before do
    # run before each test
    @api_instance = OpenPipette::FilesApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of FilesApi' do
    it 'should create an instance of FilesApi' do
      expect(@api_instance).to be_instance_of(OpenPipette::FilesApi)
    end
  end

  # unit tests for add_file
  # Add file
  # Lets you upload a file and associate it with a deal, person, organization, activity, product or lead. For more information, see the tutorial for &lt;a href&#x3D;\&quot;https://pipedrive.readme.io/docs/adding-a-file\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;adding a file&lt;/a&gt;.
  # @param file A single file, supplied in the multipart/form-data encoding and contained within the given boundaries
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :deal_id The ID of the deal to associate file(s) with
  # @option opts [Integer] :person_id The ID of the person to associate file(s) with
  # @option opts [Integer] :org_id The ID of the organization to associate file(s) with
  # @option opts [Integer] :product_id The ID of the product to associate file(s) with
  # @option opts [Integer] :activity_id The ID of the activity to associate file(s) with
  # @option opts [String] :lead_id The ID of the lead to associate file(s) with
  # @return [AddFileResponse200]
  describe 'add_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for add_file_and_link_it
  # Create a remote file and link it to an item
  # Creates a new empty file in the remote location (&#x60;googledrive&#x60;) that will be linked to the item you supply. For more information, see the tutorial for &lt;a href&#x3D;\&quot;https://pipedrive.readme.io/docs/adding-a-remote-file\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;adding a remote file&lt;/a&gt;.
  # @param file_type The file type
  # @param title The title of the file
  # @param item_type The item type
  # @param item_id The ID of the item to associate the file with
  # @param remote_location The location type to send the file to. Only &#x60;googledrive&#x60; is supported at the moment.
  # @param [Hash] opts the optional parameters
  # @return [AddFileAndLinkItResponse200]
  describe 'add_file_and_link_it test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_file
  # Delete a file
  # Marks a file as deleted. After 30 days, the file will be permanently deleted.
  # @param id The ID of the file
  # @param [Hash] opts the optional parameters
  # @return [DeleteFileResponse200]
  describe 'delete_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for download_file
  # Download one file
  # Initializes a file download.
  # @param id The ID of the file
  # @param [Hash] opts the optional parameters
  # @return [String]
  describe 'download_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_file
  # Get one file
  # Returns data about a specific file.
  # @param id The ID of the file
  # @param [Hash] opts the optional parameters
  # @return [GetFileResponse200]
  describe 'get_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_files
  # Get all files
  # Returns data about all files.
  # @param [Hash] opts the optional parameters
  # @option opts [Integer] :start Pagination start
  # @option opts [Integer] :limit Items shown per page
  # @option opts [String] :sort The field names and sorting mode separated by a comma (&#x60;field_name_1 ASC&#x60;, &#x60;field_name_2 DESC&#x60;). Only first-level field keys are supported (no nested keys). Supported fields: &#x60;id&#x60;, &#x60;user_id&#x60;, &#x60;deal_id&#x60;, &#x60;person_id&#x60;, &#x60;org_id&#x60;, &#x60;product_id&#x60;, &#x60;add_time&#x60;, &#x60;update_time&#x60;, &#x60;file_name&#x60;, &#x60;file_type&#x60;, &#x60;file_size&#x60;, &#x60;comment&#x60;.
  # @return [GetFilesResponse200]
  describe 'get_files test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for link_file_to_item
  # Link a remote file to an item
  # Links an existing remote file (&#x60;googledrive&#x60;) to the item you supply. For more information, see the tutorial for &lt;a href&#x3D;\&quot;https://pipedrive.readme.io/docs/adding-a-remote-file\&quot; target&#x3D;\&quot;_blank\&quot; rel&#x3D;\&quot;noopener noreferrer\&quot;&gt;adding a remote file&lt;/a&gt;.
  # @param item_type The item type
  # @param item_id The ID of the item to associate the file with
  # @param remote_id The remote item ID
  # @param remote_location The location type to send the file to. Only &#x60;googledrive&#x60; is supported at the moment.
  # @param [Hash] opts the optional parameters
  # @return [LinkFileToItemResponse200]
  describe 'link_file_to_item test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_file
  # Update file details
  # Updates the properties of a file.
  # @param id The ID of the file
  # @param [Hash] opts the optional parameters
  # @option opts [String] :name The visible name of the file
  # @option opts [String] :description The description of the file
  # @return [UpdateFileResponse200]
  describe 'update_file test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
