=begin
#Pipedrive API v1

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'spec_helper'
require 'json'

# Unit tests for OpenPipette::SubscriptionsApi
# Automatically generated by openapi-generator (https://openapi-generator.tech)
# Please update as you see appropriate
describe 'SubscriptionsApi' do
  before do
    # run before each test
    @api_instance = OpenPipette::SubscriptionsApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of SubscriptionsApi' do
    it 'should create an instance of SubscriptionsApi' do
      expect(@api_instance).to be_instance_of(OpenPipette::SubscriptionsApi)
    end
  end

  # unit tests for add_recurring_subscription
  # Add a recurring subscription
  # Adds a new recurring subscription.
  # @param [Hash] opts the optional parameters
  # @option opts [AddRecurringSubscriptionRequest] :add_recurring_subscription_request 
  # @return [SubscriptionsIdResponse200]
  describe 'add_recurring_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for add_subscription_installment
  # Add an installment subscription
  # Adds a new installment subscription.
  # @param [Hash] opts the optional parameters
  # @option opts [AddSubscriptionInstallmentRequest] :add_subscription_installment_request 
  # @return [SubscriptionsIdResponse200]
  describe 'add_subscription_installment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for cancel_recurring_subscription
  # Cancel a recurring subscription
  # Cancels a recurring subscription.
  # @param id The ID of the subscription
  # @param [Hash] opts the optional parameters
  # @option opts [CancelRecurringSubscriptionRequest] :cancel_recurring_subscription_request 
  # @return [SubscriptionsIdResponse200]
  describe 'cancel_recurring_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for delete_subscription
  # Delete a subscription
  # Marks an installment or a recurring subscription as deleted.
  # @param id The ID of the subscription
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionsIdResponse200]
  describe 'delete_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for find_subscription_by_deal
  # Find subscription by deal
  # Returns details of an installment or a recurring subscription by the deal ID.
  # @param deal_id The ID of the deal
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionsIdResponse200]
  describe 'find_subscription_by_deal test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_subscription
  # Get details of a subscription
  # Returns details of an installment or a recurring subscription.
  # @param id The ID of the subscription
  # @param [Hash] opts the optional parameters
  # @return [SubscriptionsIdResponse200]
  describe 'get_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for get_subscription_payments
  # Get all payments of a subscription
  # Returns all payments of an installment or recurring subscription.
  # @param id The ID of the subscription
  # @param [Hash] opts the optional parameters
  # @return [PaymentResponse200]
  describe 'get_subscription_payments test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_recurring_subscription
  # Update a recurring subscription
  # Updates a recurring subscription.
  # @param id The ID of the subscription
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateRecurringSubscriptionRequest] :update_recurring_subscription_request 
  # @return [SubscriptionsIdResponse200]
  describe 'update_recurring_subscription test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

  # unit tests for update_subscription_installment
  # Update an installment subscription
  # Updates an installment subscription.
  # @param id The ID of the subscription
  # @param [Hash] opts the optional parameters
  # @option opts [UpdateSubscriptionInstallmentRequest] :update_subscription_installment_request 
  # @return [SubscriptionsIdResponse200]
  describe 'update_subscription_installment test' do
    it 'should work' do
      # assertion here. ref: https://rspec.info/features/3-12/rspec-expectations/built-in-matchers/
    end
  end

end
