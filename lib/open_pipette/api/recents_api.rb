=begin
#Pipedrive API v1

#No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

The version of the OpenAPI document: 1.0.0

Generated by: https://openapi-generator.tech
Generator version: 7.7.0

=end

require 'cgi'

module OpenPipette
  class RecentsApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end
    # Get recents
    # Returns data about all recent changes occurred after the given timestamp.
    # @param since_timestamp [String] The timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :items Multiple selection of item types to include in the query (optional)
    # @option opts [Integer] :start Pagination start (default to 0)
    # @option opts [Integer] :limit Items shown per page
    # @return [GetRecentsResponse200]
    def get_recents(since_timestamp, opts = {})
      data, _status_code, _headers = get_recents_with_http_info(since_timestamp, opts)
      data
    end

    # Get recents
    # Returns data about all recent changes occurred after the given timestamp.
    # @param since_timestamp [String] The timestamp in UTC. Format: YYYY-MM-DD HH:MM:SS.
    # @param [Hash] opts the optional parameters
    # @option opts [String] :items Multiple selection of item types to include in the query (optional)
    # @option opts [Integer] :start Pagination start (default to 0)
    # @option opts [Integer] :limit Items shown per page
    # @return [Array<(GetRecentsResponse200, Integer, Hash)>] GetRecentsResponse200 data, response status code and response headers
    def get_recents_with_http_info(since_timestamp, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug 'Calling API: RecentsApi.get_recents ...'
      end
      # verify the required parameter 'since_timestamp' is set
      if @api_client.config.client_side_validation && since_timestamp.nil?
        fail ArgumentError, "Missing the required parameter 'since_timestamp' when calling RecentsApi.get_recents"
      end
      allowable_values = ["activity", "activityType", "deal", "file", "filter", "note", "person", "organization", "pipeline", "product", "stage", "user"]
      if @api_client.config.client_side_validation && opts[:'items'] && !allowable_values.include?(opts[:'items'])
        fail ArgumentError, "invalid value for \"items\", must be one of #{allowable_values}"
      end
      # resource path
      local_var_path = '/recents'

      # query parameters
      query_params = opts[:query_params] || {}
      query_params[:'since_timestamp'] = since_timestamp
      query_params[:'items'] = opts[:'items'] if !opts[:'items'].nil?
      query_params[:'start'] = opts[:'start'] if !opts[:'start'].nil?
      query_params[:'limit'] = opts[:'limit'] if !opts[:'limit'].nil?

      # header parameters
      header_params = opts[:header_params] || {}
      # HTTP header 'Accept' (if needed)
      header_params['Accept'] = @api_client.select_header_accept(['application/json'])

      # form parameters
      form_params = opts[:form_params] || {}

      # http body (model)
      post_body = opts[:debug_body]

      # return_type
      return_type = opts[:debug_return_type] || 'GetRecentsResponse200'

      # auth_names
      auth_names = opts[:debug_auth_names] || ['api_key', 'oauth2']

      new_options = opts.merge(
        :operation => :"RecentsApi.get_recents",
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => return_type
      )

      data, status_code, headers = @api_client.call_api(:GET, local_var_path, new_options)
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: RecentsApi#get_recents\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
